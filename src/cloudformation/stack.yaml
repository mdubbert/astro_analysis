AWSTemplateFormatVersion: '2010-09-09'
Description: Performs stream processing of astronomical observations

Parameters:
  CodeBucketName:
    Type: String
    MinLength: 6
  StackName:
    Type: String
    MinLength: 8

Resources:
  AstroStream:
    Type: AWS::Kinesis::Stream
    Properties: 
      Name: !Sub '${StackName}_astro-stream'
      RetentionPeriodHours: 24
      ShardCount: 1
      StreamEncryption: 
        EncryptionType: KMS
        KeyId: !Ref AstroStreamKey
      StreamModeDetails: 
        StreamMode: PROVISIONED

  AstroStreamKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Used to encrypt Kinesis Data Stream contents
      Enabled: True
      KeyPolicy:
        Version: 2012-10-17
        Id: ad-astra-per-scientiam
        Statement:
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: 
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
                - !Sub "arn:aws:iam::${AWS::AccountId}:user/service_astro_analysis"
            Action:
              - 'kms:*'
            Resource: '*'

  AstroDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref StackName
        Description: Hosts tables containing astronomy data

  ProducerJob:
    Type: AWS::Glue::Job
    Properties:
        Name: !Sub '${StackName}_producer_sbdb'
        MaxRetries: 0
        Command:
          Name: pythonshell
          PythonVersion: "3.9"
          ScriptLocation: !Sub "s3://${CodeBucketName}/${StackName}/code/producer/producer.py"
        ExecutionProperty:
          MaxConcurrentRuns: 1
        # GlueVersion: "2.0"
        # Below value is DPU, default of 0.0625
        MaxCapacity: 0.0625
        Role: !GetAtt ProducerRole.Arn
        Timeout: 60

  ProducerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Principal:
              Service:
                - glue.amazonaws.com
      Description: For writing records to Kinesis data stream
      
  ProducerPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${StackName}-astro-producer-policy'
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: 
              - kms:GenerateDataKey
              - kms:Encrypt
            Resource: !GetAtt AstroStreamKey.Arn
          - Effect: Allow
            Action: 
              - kinesis:PutRecord
              - kinesis:PutRecords
            Resource: !GetAtt AstroStream.Arn
          - Effect: Allow
            Action:
              - s3:List*
            Resource: !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref CodeBucketName
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
            Resource: !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref CodeBucketName
              - '/'
              - !Ref StackName
              - '/code/producer/*'
          - Effect: Allow
            Action:
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: !Sub 'arn:aws:logs:us-east-1:${AWS::AccountId}:*'
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
            Resource: '*'
      Roles:
        - !Ref ProducerRole

  ConsumerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
            - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
                - kinesisanalytics.amazonaws.com
      Description: For reading records from Kinesis data stream
      
  ConsumerPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${StackName}-astro-consumer-policy'
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: 
              - kms:Decrypt
            Resource: !GetAtt AstroStreamKey.Arn
          - Effect: Allow
            Action: 
              - kinesis:DescribeStream
              - kinesis:ListShards
              - kinesis:GetShardIterator
              - kinesis:GetRecords
            Resource: !GetAtt AstroStream.Arn
          # Access to application package
          - Effect: Allow
            Action:
              - s3:List*
            Resource: !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref CodeBucketName
          - Effect: Allow
            Action: 
              - s3:GetObject
              - s3:GetObjectVersion
            Resource: !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref CodeBucketName
              - '/'
              - !Ref StackName
              - '/code/consumer/*'
          - Effect: Allow
            Action: 
              - glue:GetDatabase
              - glue:GetDatabases
              - glue:GetTable
              - glue:GetTables
              - glue:GetUserDefinedFunction
              - glue:CreateTable
            Resource: '*'
      Roles:
        - !Ref ConsumerRole

  AstroRegistry:
    Type: AWS::Glue::Registry
    Properties: 
      Description: Stores schema definitions and versions
      Name: !Sub '${StackName}_astro_registry'

  SBDBApiSchemaBase:
    Type: AWS::Glue::Schema
    Properties: 
      # CheckpointVersion: 
      #   SchemaVersion
      Compatibility: BACKWARD
      DataFormat: AVRO
      # Description: String
      Name: !Sub '${StackName}_sbdb_api'
      Registry:
        Arn: !GetAtt AstroRegistry.Arn
      SchemaDefinition: >
        {"namespace":"foo.avro","type":"record","name":"user","fields":[{"name":"name","type":"string"},{"name":"favorite_number","type":"int"}]}
      
  # TransformedSBDBSchema:
  #   Type: AWS::Glue::SchemaVersion
  #   Properties: 
  #     Schema: 
  #       !Ref SBDBApiSchemaBase
  #     SchemaDefinition: String
